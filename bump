#!/usr/bin/python
# -*- coding: utf-8 -*-

# A semi-automatic bump script

import os
import sys
import pisi
import time

RELEASE = """\
        <Update release="%s">
            <Date>%s</Date>
            <Version>%s</Version>
            <Comment>%s</Comment>
            <Name>%s</Name>
            <Email>%s</Email>
        </Update>
"""

TRANSLATIONS = """\
<?xml version="1.0" ?>
<PISI>
    <Source>
        <Name>%s</Name>
        <Summary xml:lang="tr">Add a summary for the package</Summary>
        <Description xml:lang="tr">Add a description for the package.</Description>
    </Source>
</PISI>
"""

def get_and_save_user_info():
    name = "PACKAGER_NAME"
    email = "PACKAGER_EMAIL"

    conf_file = os.path.expanduser("~/.packagerinfo")
    if os.path.exists(conf_file):
        # Read from it
        name, email = open(conf_file, "r").read().strip().split(",")

    else:
        print "Please enter your full name as seen in pspec files"
        name = raw_input("> ")
        print "Please enter your e-mail as seen in pspec files"
        email = raw_input("> ")
        print "Saving packager info into %s" % conf_file

        open(conf_file, "w").write("%s,%s" % (name, email))

    return name, email

def increment_release(pspec, ver, comment, packager_name, packager_email):
    release = int(pisi.specfile.SpecFile('pspec.xml').history[0].release)+1
    date = time.strftime("%Y-%m-%d")

    global RELEASE
    new_release = RELEASE % (release, date, ver, comment,
                             packager_name,
                             packager_email)

    return pspec.replace("<History>\n", "<History>\n%s" % new_release)

def update_sha1sum():
    sums = []
    for archive in pisi.specfile.SpecFile('pspec.xml').source.archive:
        uri = os.path.basename(archive.uri)
        sh = os.popen("sha1sum /var/cache/pisi/archives/%s" % uri).read().split()[0]
        sums.append(sh)

    print sums
    sumi = 0

    if len(sums) > 0:
        ret = []
        for line in open("pspec.xml", "r").readlines():
            if " <Archive" in line:
                nls = line.split("sha1sum=\"")
                nl = nls[0] + "sha1sum=\"%s\"" % sums[sumi] + nls[1].split("\"", 1)[1]
                ret.append(nl)
                sumi += 1
            else:
                ret.append(line)

        return "".join(ret)

if __name__ == "__main__":

    if len(sys.argv) < 3:
        print "Usage: %s <Bumped version> <Release comment>" % sys.argv[0]
        sys.exit(1)

    # First fetch the tarball
    os.system("pisi build pspec.xml --fetch")

    # Update sha1sum
    newpspec = update_sha1sum()

    # Add translations.xml
    if not os.path.exists("translations.xml"):
        open("translations.xml", "w").write(TRANSLATIONS % os.path.basename(os.getcwd()))
        os.system("svn add translations.xml")

    packager_name, packager_email = get_and_save_user_info()

    # Increment release
    new_pspec = increment_release(newpspec, sys.argv[1], sys.argv[2], packager_name, packager_email)
    open("pspec.xml", "w").write(new_pspec)
